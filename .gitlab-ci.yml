# GitLab CI configuration to use SSH and docker registry
#
# Prerequisities:
# 1. Generate a password less SSH key on a local machine
# 2. Add the public key as a deploy key to the repository/group
# 3. Add the private key as a variable (e.g. SSH_KEY_PRIVATE) to the repository/group
#
# Scheduled branch mirroring:
# 1. Allow the CI deploy key to have write access
# 2. In the pipelines schedule configuration, set:
#      - MIRROR_UPSTREAM = true
# 3. Set the remaining variables to appropriate values:
#      - REMOTE_URL
#      - REMOTE_BRANCH
#      - LOCAL_REMOTE_BRANCH

image: docker:19.03.1

services:
  - docker:19.03.1-dind

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2

before_script:
  - docker info
  - apk --update add git bash
  - which ssh-agent || ( apk --update add openssh-client )
  # To build and push the docker image of private repository to the container registry SSH
  # needs to be setup in the CI environment
  - eval $(ssh-agent -s)
  - echo "$CI_SSH_KEY_PRIVATE" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

Build Docker Image:
  script:
    - ci/build-docker-image.sh --ssh --image="$CI_REGISTRY/avular/common-tools/package-manager/tue-env" --branch="$CI_COMMIT_BRANCH" --commit="$CI_COMMIT_SHA" --pull_request="false" --user="gitlab-ci-token" --password="$CI_JOB_TOKEN" --registry="$CI_REGISTRY"
  rules:
    - if: '$MIRROR_UPSTREAM == "true"'
      when: never
    - if: $CI_MERGE_REQUEST_IID
      when: never
    - when: always

Merge Request Test:
  script:
    - ci/build-docker-image.sh --ssh --image="$CI_REGISTRY/avular/common-tools/package-manager/tue-env" --branch="$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" --commit="$CI_COMMIT_SHA" --pull_request="$CI_MERGE_REQUEST_IID" --pull_request_branch="$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
  rules:
    - if: $CI_MERGE_REQUEST_IID

Mirror Upstream:
  script:
    - ci/mirror-upstream.bash --upstream-remote-url="$REMOTE_URL" --local-remote-url="git@gitlab.com:$CI_PROJECT_PATH" --upstream-remote-branch="$REMOTE_BRANCH" --local-remote-branch="$LOCAL_REMOTE_BRANCH" --user="$GITLAB_USER_NAME" --email="$GITLAB_USER_EMAIL"
  rules:
    - if: '$MIRROR_UPSTREAM == "true"'
