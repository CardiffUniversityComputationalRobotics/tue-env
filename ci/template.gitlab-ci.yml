# GitLab CI configuration to use SSH and docker registry
#
# Prerequisities:
# 1. Generate a password less SSH key on a local machine
# 2. Add the public key as a deploy key to the repository/group
# 3. Add the private key as a variable (e.g. SSH_KEY_PRIVATE) to the repository/group

image: docker:19.03.1

services:
  - docker:19.03.1-dind

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2

before_script:
  - docker info
  - apk --update add git bash
  - which ssh-agent || ( apk --update add openssh-client )
  - eval $(ssh-agent -s)
  - echo "$CI_SSH_KEY_PRIVATE" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - git clone --depth=1 --single-branch --branch master git@gitlab.com:avular/common-tools/package-manager/tue-env.git /tmp/tue-env
  - mv /tmp/tue-env/ci/install-package.sh /tmp/tue-env/ci/build-package.sh .
  - echo "$CI_JOB_TOKEN" | docker login $CI_REGISTRY -u gitlab-ci-token --password-stdin

stages:
  - install
  - build

Install:
  stage: install
  script:
    - ./install-package.sh -p=$CI_PROJECT_NAME -b=${CI_MERGE_REQUEST_BRANCH_NAME:-${CI_COMMIT_BRANCH}} -c=$CI_COMMIT_SHA -r=${CI_MERGE_REQUEST_ID:-"false"} -i="$CI_REGISTRY/avular/common-tools/package-manager/tue-env"

Build:
  stage: build
  script:
    - ./build-package.sh -p=$CI_PROJECT_NAME
